task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}

buildscript {
    repositories {
        mavenCentral()
    }
}

ext {
    junitVersion_4 = '4.11'
    apacheCommonsTextVersion = '1.2'
    apacheCommonsIOVersion = '2.6'
    commonsCliVersion = '1.3'
    j2htmlVersion = '1.2.2'
    javaDiffUtilsVersion = '1.3.0'
    juniversalchardetVersion = '1.0.3'
    systemRulesVersion = '1.16.0'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

repositories {
    mavenCentral()
}

eclipse {
    classpath {
       downloadSources=true
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
            exclude '**/*.java'         // workaround to keep eclipse happy
        }
    }
}

dependencies {
        compile("org.apache.commons:commons-text:${apacheCommonsTextVersion}")
        compile("commons-cli:commons-cli:${commonsCliVersion}")
        compile("commons-io:commons-io:${apacheCommonsIOVersion}")
        compile("com.j2html:j2html:${j2htmlVersion}")
        compile("com.googlecode.java-diff-utils:diffutils:${javaDiffUtilsVersion}")
        compile("com.googlecode.juniversalchardet:juniversalchardet:${juniversalchardetVersion}")
        testCompile("junit:junit:${junitVersion_4}")
        testCompile("com.github.stefanbirkner:system-rules:${systemRulesVersion}")
}

mainClassName = "de.cronn.diff.Main"

run {
    if(project.hasProperty('arguments')) {
            args Eval.me(arguments)
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'de.cronn.diff.Main'
    }
 
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

clean {
    delete "${rootDir}/src/test/resources/output"
}
